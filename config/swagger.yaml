openapi: 3.0.0
info:
  title: Library Management System API
  description: API documentation for the Library Management System
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /books:
    get:
      summary: Get all books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created
  /books/{id}:
    get:
      summary: Get a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The book ID
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      summary: Update a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The book ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated
        '404':
          description: Book not found
    delete:
      summary: Delete a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The book ID
      responses:
        '200':
          description: Book deleted
        '404':
          description: Book not found
  /members:
    get:
      summary: Get all members
      responses:
        '200':
          description: A list of members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
    post:
      summary: Add a new member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '201':
          description: Member created
  /members/{id}:
    get:
      summary: Get a member by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The member ID
      responses:
        '200':
          description: A single member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '404':
          description: Member not found
    put:
      summary: Update a member by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The member ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '200':
          description: Member updated
        '404':
          description: Member not found
    delete:
      summary: Delete a member by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The member ID
      responses:
        '200':
          description: Member deleted
        '404':
          description: Member not found
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        genre:
          type: string
        publicationYear:
          type: integer
        isbn:
          type: string
    Member:
      type: object
      properties:
        member_id:
          type: integer
        name:
          type: string
        address:
          type: string
        contact_details:
          type: string
