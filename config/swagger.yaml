openapi: 3.0.0
info:
  title: Library Management System API
  description: API documentation for the Library Management System
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local server
paths:
  /library-api/book:
    get:
      tags:
        - Books
      summary: Get all books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      tags:
        - Books
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created
  /library-api/book/{id}:
    get:
      tags:
        - Books
      summary: Get a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The book ID
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      tags:
        - Books
      summary: Update a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The book ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated
        '404':
          description: Book not found
    delete:
      tags:
        - Books
      summary: Delete a book by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The book ID
      responses:
        '200':
          description: Book deleted
        '404':
          description: Book not found
  /library-api/book/{id}/NbrOfcopies:
    get:
      tags:
        - Books
      summary: Get number of copies of a book
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The book ID
      responses:
        '200':
          description: Number of copies
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
  /library-api/book/genre/{genre}:
    get:
      tags:
        - Books
      summary: Get books by genre
      parameters:
        - in: path
          name: genre
          schema:
            type: string
          required: true
          description: The genre name
      responses:
        '200':
          description: A list of books for the specified genre
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '404':
          description: No books found for this genre
  /library-api/copy:
    get:
      tags:
        - Copies
      summary: Get all copies
      responses:
        '200':
          description: A list of copies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Copy'
    post:
      tags:
        - Copies
      summary: Add a new copy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copy'
      responses:
        '201':
          description: Copy created
  /library-api/copy/{id}:
    get:
      tags:
        - Copies
      summary: Get a copy by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The copy ID
      responses:
        '200':
          description: A single copy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copy'
        '404':
          description: Copy not found
    put:
      tags:
        - Copies
      summary: Update a copy by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The copy ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copy'
      responses:
        '200':
          description: Copy updated
        '404':
          description: Copy not found
    delete:
      tags:
        - Copies
      summary: Delete a copy by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The copy ID
      responses:
        '200':
          description: Copy deleted
        '404':
          description: Copy not found
  /library-api/copy/NbOfAvailableCopies/{bookId}:
    get:
      tags:
        - Copies
      summary: Get number of available copies of a book
      parameters:
        - in: path
          name: bookId
          schema:
            type: integer
          required: true
          description: The book ID
      responses:
        '200':
          description: Number of available copies
          content:
            application/json:
              schema:
                type: object
                properties:
                  availableCopies:
                    type: integer        
  /library-api/member:
    get:
      tags:
        - Members
      summary: Get all members
      responses:
        '200':
          description: A list of members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'
  /library-api/member/{id}:
    get:
      tags:
        - Members
      summary: Get a member by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The member ID
      responses:
        '200':
          description: A single member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        '404':
          description: Member not found
    put:
      tags:
        - Members
      summary: Update a member by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The member ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '200':
          description: Member updated
        '404':
          description: Member not found
    delete:
      tags:
        - Members
      summary: Delete a member by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The member ID
      responses:
        '200':
          description: Member deleted
        '404':
          description: Member not found
  /library-api/loan:
    get:
      tags:
        - Loans
      summary: Get all loans
      responses:
        '200':
          description: A list of loans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
    post:
      tags:
        - Loans
      summary: Add a new loan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '201':
          description: Loan created
  /library-api/loan/member/{id}:
    get:
      tags:
        - Loans
      summary: Get a loan by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The loan ID
      responses:
        '200':
          description: A single loan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '404':
          description: Loan not found
  /library-api/loan/{id}:        
    put:
      tags:
        - Loans
      summary: Update a loan by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The loan ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '200':
          description: Loan updated
        '404':
          description: Loan not found
    delete:
      tags:
        - Loans
      summary: Delete a loan by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The loan ID
      responses:
        '200':
          description: Loan deleted
        '404':
          description: Loan not found
  /library-api/loans/checkNbOfLoans/{member_id}:
    get:
      tags:
        - Loans
      summary: Check the number of current loans for a member
      parameters:
        - in: path
          name: member_id
          schema:
            type: integer
          required: true
          description: The member ID
      responses:
        '200':
          description: The number of current loans for the member
        '500':
          description: Failed to check the number of loans    
  /library-api/recommendation:
    get:
      tags:
        - Recommendations
      summary: Get all recommendations
      responses:
        '200':
          description: A list of recommendations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recommendation'
    post:
      tags:
        - Recommendations
      summary: Add a new recommendation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recommendation'
      responses:
        '201':
          description: Recommendation created
  /library-api/recommendation/{id}:
    get:
      tags:
        - Recommendations
      summary: Get a recommendation by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The recommendation ID
      responses:
        '200':
          description: A single recommendation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
        '404':
          description: Recommendation not found
    put:
      tags:
        - Recommendations
      summary: Update a recommendation by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The recommendation ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recommendation'
      responses:
        '200':
          description: Recommendation updated
        '404':
          description: Recommendation not found
    delete:
      tags:
        - Recommendations
      summary: Delete a recommendation by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The recommendation ID
      responses:
        '200':
          description: Recommendation deleted
        '404':
          description: Recommendation not found        
  /library-api/auth/signup:
    post:
      tags:
        - Auth
      summary: Sign up a new member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '201':
          description: Member created
  /library-api/auth/login:
    post:
      tags:
        - Auth
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '401':
          description: Invalid email or password
  /library-api/auth/admin-login:
    post:
      tags:
        - Auth
      summary: Log in an admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '401':
          description: Invalid email or password
  /library-api/cart/member/{member_id}:
    get:
      tags:
        - Cart
      summary: Get cart items for a member
      parameters:
        - in: path
          name: member_id
          schema:
            type: integer
          required: true
          description: The member ID
      responses:
        '200':
          description: A list of cart items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
        '404':
          description: No cart items found
    delete:
      tags:
        - Cart
      summary: Clear cart for a member
      parameters:
        - in: path
          name: member_id
          schema:
            type: integer
          required: true
          description: The member ID
      responses:
        '200':
          description: Cart cleared
        '404':
          description: Cart not found
  /library-api/cart/member/{member_id}/book/{book_id}:
    post:
      tags:
        - Cart
      summary: Add a book to the cart
      parameters:
        - in: path
          name: member_id
          schema:
            type: integer
          required: true
          description: The member ID
        - in: path
          name: book_id
          schema:
            type: integer
          required: true
          description: The book ID
      responses:
        '201':
          description: Book added to cart
        '404':
          description: Book or member not found
    delete:
      tags:
        - Cart
      summary: Remove a book from the cart
      parameters:
        - in: path
          name: member_id
          schema:
            type: integer
          required: true
          description: The member ID
        - in: path
          name: book_id
          schema:
            type: integer
          required: true
          description: The book ID
      responses:
        '200':
          description: Item removed from cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Item removed from cart successfully
        '404':
          description: Item not found in cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Item not found in cart
        '500':
          description: Failed to remove item from cart
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to remove item from cart
                  error:
                    type: string
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        genre:
          type: string
        publicationYear:
          type: integer
        isbn:
          type: string
        description:
          type: string
        book_image:
          type: string
        language:
          type: string
        length:
          type: integer
    Copy:
      type: object
      properties:
        id:
          type: integer
        book_id:
          type: integer
        status:
          type: string
          enum: ['available', 'borrowed']
    Member:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
        address:
          type: string
        contact:
          type: string
        created_at:
          type: string
          format: date-time
    Loan:
      type: object
      properties:
        id:
          type: integer
        copy_id:
          type: integer
        member_id:
          type: integer
        loan_date:
          type: string
          format: date
        due_date:
          type: string
          format: date
        return_date:
          type: string
          format: date
        fine:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
    Recommendation:
      type: object
      properties:
        id:
          type: integer
        member_id:
          type: integer
        recommended_books:
          type: string
        reasons:
          type: string
        created_at:
          type: string
          format: date-time
    CartItem:
      type: object
      properties:
        id:
          type: integer
        member_id:
          type: integer
        book_id:
          type: integer
        added_at:
          type: string
          format: date-time
